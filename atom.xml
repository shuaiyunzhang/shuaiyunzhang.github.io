<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Nekonyan's秘密基地]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://nekonyan.me/"/>
  <updated>2015-03-27T14:11:43.000Z</updated>
  <id>http://nekonyan.me/</id>
  
  <author>
    <name><![CDATA[nekonyan]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[博客从GitHub迁移到GitCafe的记录]]></title>
    <link href="http://nekonyan.me/2015/03/27/%E5%8D%9A%E5%AE%A2%E4%BB%8EGitHub%E8%BF%81%E7%A7%BB%E5%88%B0GitCafe%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <id>http://nekonyan.me/2015/03/27/博客从GitHub迁移到GitCafe的记录/</id>
    <published>2015-03-27T09:32:05.000Z</published>
    <updated>2015-03-27T14:11:43.000Z</updated>
    <content type="html"><![CDATA[<p>有时候GitHub的确很难打开（就比如今天下午一些时候），相应的托管在上面的博客访问速度也受到了影响。以前看到过别人将博客托管在GitCafe上，当时的访问速度让我眼前一亮，十分流畅。因此，时隔这么久之后，我决定将Hexo博客迁移到GitCafe上，也算是做个备份。本篇文章主要是对托管在GitHub上的Hexo博客迁移到GitCafe过程的记录，也算是我开始认真写博客的开始。</p>
<h2 id="准备工作">准备工作</h2><ol>
<li><p>首先需要注册一个<a href="https://gitcafe.com" target="_blank" rel="external">GitCafe</a>账号，GitCafe的操作习惯和GitHub很相似，熟悉GitHub的上手比较快。</p>
</li>
<li><p>注册完成之后，前往<em>SSH公钥管理</em>添加SSH公钥，这里我直接使用GitHub的.pub文件密钥</p>
</li>
</ol>
<a id="more"></a>
<h2 id="在GitCafe上新建一个博客项目">在GitCafe上新建一个博客项目</h2><p>新建过程其实和GitHub也差不多，<a href="https://gitcafe.com/GitCafe/Help/wiki/Pages-%E7%9B%B8%E5%85%B3%E5%B8%AE%E5%8A%A9#wiki" target="_blank" rel="external">这里</a>是官网的教程。具体来说就是，创建一个与用户名(如果是组织，就是组织名)相同名称的项目。如果你创建的项目名与用户名相同，GitCafe会自动识别成这是一个Page项目。</p>
<h2 id="创建gitcafe-pages分支（branch）">创建gitcafe-pages分支（branch）</h2><p>进入到博客目录下面的“.deploy-git”目录下，注意这个目录默认是隐藏的。使用以下命令创建该分支，并切换到该分支，通俗理解该分支其实就是一个文件夹。<br><code>git checkout -b gitcafe-pages</code></p>
<h2 id="添加到gitcafe的远程仓库">添加到gitcafe的远程仓库</h2><p>在该分支目录下执行该命令：<br><code>git remote add origin &#39;git@gitcafe.com:yourname/yourname.git&#39;</code></p>
<p>将yourname替换为你的GitCafe用户名即可。</p>
<h2 id="最后push到gitcafe仓库">最后push到gitcafe仓库</h2><p>同样是在该分支目录下执行该命令：<br><code>git push -u origin gitcafe-pages</code></p>
<p>以后使用<code>hexo g</code>生成静态文件之后到“.deploy-git”目录下执行该命令即可。</p>
<h2 id="绑定域名">绑定域名</h2><p>进入项目管理界面，点击自定义域名，再次参见<a href="https://gitcafe.com/GitCafe/Help/wiki/Pages-%E7%9B%B8%E5%85%B3%E5%B8%AE%E5%8A%A9#wiki" target="_blank" rel="external">官方教程</a>，在在域名管理界面（我的是DNSPod）添加一个CNAME记录时，如果出现无法再添加CNAME的情况，可以添加一个A记录，值为207.226.141.135（应该是gitcafe服务器的地址）。</p>
<h2 id="修改”_config-yml”">修改”_config.yml”</h2><p>想要直接使用<code>hexo d</code>提交到GitCafe需要修改博客目录下的“_config.yml”，格式如下：</p>
<pre><code><span class="attribute">deploy</span>:
  <span class="attribute">type</span>: git
  <span class="attribute">repository</span>: git<span class="variable">@gitcafe</span>.<span class="attribute">com</span>:yourname/yourname.git
  <span class="attribute">branch</span>: gitcafe-pages
</code></pre><h2 id="问题">问题</h2><p>在deploy时遇到了一个问题，显示为<code>error: failed to push some refs to &#39;git@gitcafe.com:shuaiyunzhang/shuaiyunzhang.git&#39;</code>，解决方法为将.deploy-git文件夹删除（在Mac中用命令行删除更为方便）再重新尝试即可。</p>
<h2 id="其他">其他</h2><p>如果想再同步到GitHub只需要切换分支即可，进入到“.deploy-git”目录执行以下命令，切换git工作分支为master：<br><code>git checkout master</code></p>
<p>然后就直接像之前使用hexo一样即可,<code>hexo d</code>可以直接提交到github。如果再想提交到gitcafe直接再切换回gitcafe-pages分支即可。可以使用以下命令查看当前工作分支：<br><code>git branch</code><br>不过在网上找资料时貌似还可以同时同步两个，这点暂时放下，以后有时间再去研究。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>有时候GitHub的确很难打开（就比如今天下午一些时候），相应的托管在上面的博客访问速度也受到了影响。以前看到过别人将博客托管在GitCafe上，当时的访问速度让我眼前一亮，十分流畅。因此，时隔这么久之后，我决定将Hexo博客迁移到GitCafe上，也算是做个备份。本篇文章主要是对托管在GitHub上的Hexo博客迁移到GitCafe过程的记录，也算是我开始认真写博客的开始。</p>
<h2 id="准备工作">准备工作</h2><ol>
<li><p>首先需要注册一个<a href="https://gitcafe.com">GitCafe</a>账号，GitCafe的操作习惯和GitHub很相似，熟悉GitHub的上手比较快。</p>
</li>
<li><p>注册完成之后，前往<em>SSH公钥管理</em>添加SSH公钥，这里我直接使用GitHub的.pub文件密钥</p>
</li>
</ol>]]>
    
    </summary>
    
      <category term="GitCafe" scheme="http://nekonyan.me/tags/GitCafe/"/>
    
      <category term="GitHub" scheme="http://nekonyan.me/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客搭建二三事]]></title>
    <link href="http://nekonyan.me/2015/02/17/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%BA%8C%E4%B8%89%E4%BA%8B/"/>
    <id>http://nekonyan.me/2015/02/17/Hexo博客搭建二三事/</id>
    <published>2015-02-17T03:03:38.000Z</published>
    <updated>2015-02-17T11:51:32.000Z</updated>
    <content type="html"><![CDATA[<p>一直想做些好玩的事了，比如说做个个人网站啥的（虽然做个网站是基础中的基础，没多大技术含量……汗颜），在看到同学捣腾的<a href="http://www.jellybool.com/" target="_blank" rel="external">作品</a>后，心向往之，但由于本人拖延症已到晚期，五月病时不时还要发作一下，迟迟未开始，在深刻认识到技术需要实践这个道理之后，终于动工啦！用《舰队collection》里面的话来说就是“不要怂，单纵就是干”！</p>
<p>这篇文章主要是对博客搭建过程做个记录，但不会很详细的讲述。以下分为三个方面来做阐述：采用的工具、搭建流程以及遇到的问题。如果这些浅薄的文字能够帮助到遇到同样问题的有缘人，那是我的荣幸。</p>
<h2 id="采用的工具">采用的工具</h2><ol>
<li><a href="http://hexo.io/" target="_blank" rel="external">Hexo</a></li>
<li><a href="https://github.com/" target="_blank" rel="external">Github Pages</a></li>
<li><a href="http://msysgit.github.io/" target="_blank" rel="external">Git</a>或者<a href="https://windows.github.com/" target="_blank" rel="external">Github for Windows</a></li>
<li><a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a></li>
<li><a href="http://duoshuo.com/" target="_blank" rel="external">多说</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">Next Theme</a></li>
<li><a href="http://www.qiniu.com/" target="_blank" rel="external">七牛</a></li>
<li><a href="http://www.sublimetext.com/" target="_blank" rel="external">Sublime Text 3</a></li>
</ol>
<a id="more"></a>
<h3 id="Hexo:">Hexo:</h3><p>Hexo是一款基于nodejs的轻量博客框架。还支持Markdown编辑。使用以及特性点击上面的Hexo链接查看即可，容易上手。我选择Hexo，主要因为nodejs，最近一直在捣腾nodejs，所以想用nodejs通用前后端，做一些好玩的东西（PHP就没多大新意了）在学习了express+nodejs一段时间后，发现要在短时间内用它制作博客，对于我来说还是比较困难的，所以直接动用了Hexo。</p>
<h3 id="Github_Pages:">Github Pages:</h3><p>这是github免费提供的代码托管服务，好像是有300M的空间，其他的一些参数也都满足个人博客的需求，几乎现在所有IT从业者都有github的账号，怎么使用也就不阐述。不过因为一些“你懂得”的原因，github国内访问比较慢，过段时间会把数据迁移到gitcafe上，看了一些别人的博客，感觉速度很快。</p>
<h3 id="Git:">Git:</h3><p>使用git的话，需要掌握一些简单的命令操作，不过网上教程蛮多的，照猫画虎就行，用着用着就熟了。另外这里是<a href="http://git-scm.com/book/zh/v1" target="_blank" rel="external">Git官方中文教程</a>，有意者可以戳进去看看。</p>
<p>这里需要说明一点的是使用Github for Windows客户端也是可以的，而且其界面也是十分的简洁与方便，可以省去很多敲命令的操作，不过从我个人来讲，git熟练之后，效率更高。</p>
<h3 id="Nodejs:">Nodejs:</h3><p>这里只需要下载安装包，一路戳下去就行，主要是要使用npm工具。</p>
<h3 id="多说:">多说:</h3><p>因为Hexo是用于布置轻量静态博客的工具，所以评论功能需要引入外部js来实现，虽然Hexo内置了Disqus，但国内的话，还是用国内的产品好一点。</p>
<h3 id="Next_Theme:">Next Theme:</h3><p>Next是一款Hexo的主题，点击上面的链接进入其github主页，选择它纯粹是个人喜好啦，在接下来的一段时间里会对这个主题进行一些定制，暂时打算多写几套博客主题来加深自己对html5和css3还有jQuery这些基础前端知识的掌握。</p>
<h3 id="七牛:">七牛:</h3><p>图床用，以后迁移大的静态数据也方便，标准用户免费享用的资源足够个人使用。</p>
<h3 id="Sublime_Text_3:">Sublime Text 3:</h3><p>这个就不用多说了，轻量文本编辑工具，各种强大的插件与快捷操作，多少让人想到了Vim，Geek范十足！</p>
<h2 id="搭建过程">搭建过程</h2><h4 id="1-_建立github_pages">1. 建立github pages</h4><p>创建一个格式为username.github.io的repository即可。</p>
<h4 id="2-_连接github_pages">2. 连接github pages</h4><p>使用git bash shell 创建ssh key，使用该key连接。</p>
<h4 id="3-_安装Hexo">3. 安装Hexo</h4><p>在bash shell下，用npm安装Hexo，安装主题，修改配置文件，重新generate <code>hexo g</code> 然后 <code>hexo s</code>，打开localhost:4000进行测试。</p>
<h4 id="4-_购买域名">4. 购买域名</h4><p>国内域名需要备案，比较麻烦，这里使用的是国外的Godaddy（狗爹），最棒的是可以用支付宝付款。</p>
<h4 id="5-_域名绑定">5. 域名绑定</h4><p>这里使用国内的DNSpod进行DNS解析。在github pages的根目录下，直接创建一个无后缀的文件CNAME，直接编辑它的内容为你购买的域名，不需要前面的协议部分（像http或者https）,这样就完成绑定了</p>
<h4 id="6-_部署">6. 部署</h4><p>在按照自己的想法修改本地文件后，重新生成 <code>hexo g</code>，再执行 <code>hexo d</code> （之前要在配置文件对部署这一项修改好）即可部署到github，再在浏览器地址栏输入购买的域名就可以访问了。</p>
<p>这里需要注意一点的是，每次修改完本地文件后，最好是先执行 <code>hexo clean</code> 命令，然后 <code>hexo g</code> 生成静态文件，再在本地预览 <code>hexo s</code> ，发现符合效果后再进行部署。因为本人遇到过 <code>hexo new postName</code>，实际页面出现两个post的情况，采用上面的方法可以避免出现这个问题。</p>
<h2 id="遇到的问题">遇到的问题</h2><ol>
<li><p>在建立github pages时，要注意这里的username不是昵称，如果要修改username的话，步骤为 <strong>Settings-&gt;Account Settings-&gt;Change username</strong> 。此外网上有些教程后缀为.com，但应该现在的github pages应该都转到了.io，所以使用.io更好。</p>
</li>
<li><p>连接github时，网上虽然有很多教程，但有的根本没用！！！会出现怎么都连不上的情况。下面的参考资料中的方法亲测可用。另外使用github for windows就可以免去这一繁琐的步骤，因为它会自动生成key。</p>
</li>
<li><p>购买域名时，如果没多少钱的话，可以去网上搜这个时间段的Godaddy的优惠码，我注册时，貌似有优惠。不过这里我很想吐槽了，为什么提交时有左右两个按钮，我照着以前的教程貌似点了左边那个，是不是这样就没有优惠了？希望知道的人知会我一下，先谢过了。另外个人网站域名可以选择.com或者.me，网上有人说不要选择.info，因为一些黑历史，该域名被Google惩罚了。用支付宝支付时，一定要注意的是，款项单位不要用人民币（CNY），用默认的美元（USD）就行，不然会出现无法支付的问题。</p>
</li>
<li><p>最开始我是不知道怎么部署的，下面参考资料介绍的配置方法可行。</p>
</li>
<li><p>有的主题中的一些文件会使用google提供的js文件、字体或者样式，还是因为一些“你懂得”的原因，会导致加载很慢，甚至样式出现不了。推荐将其替换为国内的CDN服务，比如百度CDN公共库。</p>
</li>
</ol>
<h2 id="参考资料">参考资料</h2><ol>
<li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">http://www.jianshu.com/p/05289a4bc8b2</a></li>
<li><a href="http://www.tuicool.com/articles/uE7FJba" target="_blank" rel="external">http://www.tuicool.com/articles/uE7FJba</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>一直想做些好玩的事了，比如说做个个人网站啥的（虽然做个网站是基础中的基础，没多大技术含量……汗颜），在看到同学捣腾的<a href="http://www.jellybool.com/">作品</a>后，心向往之，但由于本人拖延症已到晚期，五月病时不时还要发作一下，迟迟未开始，在深刻认识到技术需要实践这个道理之后，终于动工啦！用《舰队collection》里面的话来说就是“不要怂，单纵就是干”！</p>
<p>这篇文章主要是对博客搭建过程做个记录，但不会很详细的讲述。以下分为三个方面来做阐述：采用的工具、搭建流程以及遇到的问题。如果这些浅薄的文字能够帮助到遇到同样问题的有缘人，那是我的荣幸。</p>
<h2 id="采用的工具">采用的工具</h2><ol>
<li><a href="http://hexo.io/">Hexo</a></li>
<li><a href="https://github.com/">Github Pages</a></li>
<li><a href="http://msysgit.github.io/">Git</a>或者<a href="https://windows.github.com/">Github for Windows</a></li>
<li><a href="http://nodejs.org/">Node.js</a></li>
<li><a href="http://duoshuo.com/">多说</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next">Next Theme</a></li>
<li><a href="http://www.qiniu.com/">七牛</a></li>
<li><a href="http://www.sublimetext.com/">Sublime Text 3</a></li>
</ol>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://nekonyan.me/tags/Hexo/"/>
    
  </entry>
  
</feed>